__NUXT_JSONP__("/posts/letsencrypt-ssl", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T){return {data:[{page:{slug:"letsencrypt-ssl",description:"Certbot in action",title:"Using Let's Encrypt free SSL on Ubuntu Server and Nginx (wildcard included)",image:"\u002Fposts\u002F2020-04-10-01\u002F1.jpg",date:"2020-04-10",toc:[],body:{type:J,children:[{type:b,tag:f,props:{},children:[{type:a,value:"Hi, I'm just moving my notes from gitbook (legacy) to dev.to. I love it hear, it's markdown and it's quick. I hope you find this useful."}]},{type:a,value:e},{type:b,tag:B,props:{id:"installation"},children:[{type:b,tag:m,props:{href:"#installation",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:"Installation"}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"All you need is "},{type:b,tag:g,props:{},children:[{type:a,value:"certbot"}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:b,tag:m,props:{href:K,rel:[v,w,x],target:y},children:[{type:a,value:K}]},{type:a,value:"\nor\n"},{type:b,tag:m,props:{href:L,rel:[v,w,x],target:y},children:[{type:a,value:L}]},{type:a,value:"\nto be more specific on Ubuntu 18.04"}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"This is the installation instructions"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,"language-bash"]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:N}]},{type:a,value:" software-properties-common\n"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:" add-apt-repository universe\n"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:" add-apt-repository ppa:certbot\u002Fcertbot\n"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:t}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:z}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:N}]},{type:a,value:" certbot\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"NOTE I didn't include "},{type:b,tag:g,props:{},children:[{type:a,value:"python-certbot-apache"}]},{type:a,value:" because I like to do things on my own and I usually use Nginx."}]},{type:a,value:e},{type:b,tag:B,props:{id:"for-single-domain"},children:[{type:b,tag:m,props:{href:"#for-single-domain",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:"For single domain"}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"I'm assuming you are using normal config path for nginx which should be located at "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fnginx\u002Fsites-enable"}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"So, we will create a new file called "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fnginx\u002Fsites-enable\u002Fletsencrypt.conf"}]},{type:a,value:" (you should create this in sites-available and symlink it to sites-enable)"}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Now, this should be the content of "},{type:b,tag:g,props:{},children:[{type:a,value:"letsencrypt.conf"}]}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,"language-nginx"]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"server"}]}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:G}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"listen"}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:P}]},{type:a,value:" default_server"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"server_name"}]},{type:a,value:" _"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"index"}]},{type:a,value:" index.html index.htm index.nginx-debian.html"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:J}]},{type:a,value:" \u002Fvar\u002Fwww\u002Fhtml"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:Q}]},{type:a,value:" ^~ \u002F.well-known\u002Facme-challenge"}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:G}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"allow"}]},{type:a,value:" all"}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"default_type"}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,"string"]},children:[{type:a,value:"\"text\u002Fplain\""}]}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:I}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:Q}]},{type:a,value:" \u002F"}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:G}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,k]},children:[{type:b,tag:c,props:{className:[d,l]},children:[{type:a,value:"return"}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,O]},children:[{type:a,value:"301"}]},{type:a,value:" https:\u002F\u002F"},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"$host"}]},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"$request_uri"}]}]},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:r},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:I}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:I}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"This will make sure that all request on port "},{type:b,tag:g,props:{},children:[{type:a,value:P}]},{type:a,value:" with location "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002F.well-known\u002Facme-challenge"}]},{type:a,value:" is served correctly."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Any other path should be redirected to "},{type:b,tag:g,props:{},children:[{type:a,value:"443"}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Now you need to setup your dns for the domain you want. It should be A tag and point to this server. Note, you should change "},{type:b,tag:m,props:{href:"http:\u002F\u002Fwww.example.com",rel:[v,w,x],target:y},children:[{type:a,value:"www.example.com"}]},{type:a,value:" and x.x.x.x to your domain and server"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,u]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"www.example.com     A     x.x.x.x\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"It may take awhile or a second, depends on your luck. Just test this config on "},{type:b,tag:m,props:{href:A,rel:[v,w,x],target:y},children:[{type:a,value:A}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Once dnschecker show the correct result you just need to run"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,u]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"sudo certbot certonly --webroot -w \u002Fvar\u002Fwww\u002Fhtml -d www.example.com\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"You should get chain and keys located here"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,u]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fletsencrypt\u002Flive\u002Fwww.example.com\u002Ffullchain.pem\n\u002Fetc\u002Fletsencrypt\u002Flive\u002Fwww.example.com\u002Fprivkey.pem\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"Example nginx config "},{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fnginx\u002Fsites-enable\u002Fwww.example.com.conf"}]}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,u]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"server {\n    ssl_prefer_server_ciphers on;\n\n    # Add HSTS\n    add_header Strict-Transport-Security \"max-age=31536000; includeSubdomains\";\n    client_max_body_size 20M;\n    listen       443;\n    server_name  www.example.com;\n    root \u002Fhome\u002Fubuntu\u002Fyour_app;\n\n    ssl on;\n    ssl_certificate \u002Fetc\u002Fletsencrypt\u002Flive\u002Fwww.example.com\u002Ffullchain.pem;\n    ssl_certificate_key \u002Fetc\u002Fletsencrypt\u002Flive\u002Fwww.example.com\u002Fprivkey.pem;\n    ssl_dhparam \u002Fetc\u002Fnginx\u002Fdhparams\u002Fdhparams.pem; # you need to generate this if you want to use dhparam\n\n    #prevent poodle\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\n    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';\n\n}\n"}]}]}]},{type:a,value:e},{type:b,tag:B,props:{id:"for-wildcard"},children:[{type:b,tag:m,props:{href:"#for-wildcard",ariaHidden:C,tabIndex:D},children:[{type:b,tag:c,props:{className:[E,F]},children:[]}]},{type:a,value:"For wildcard"}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"You need to run this command first (don't forget to change *.example.com to your domain)"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,u]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"sudo certbot certonly --manual -d *.example.com --agree-tos --manual-public-ip-logging-ok --preferred-challenges dns-01 --server https:\u002F\u002Facme-v02.api.letsencrypt.org\u002Fdirectory\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"You will get instructions on how to setup. It will tell you to setup "},{type:b,tag:g,props:{},children:[{type:a,value:S}]},{type:a,value:" dns record. Once you complete setup your "},{type:b,tag:g,props:{},children:[{type:a,value:S}]},{type:a,value:" dns record, you should confirm with "},{type:b,tag:m,props:{href:A,rel:[v,w,x],target:y},children:[{type:a,value:A}]},{type:a,value:" before hitting enter."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"If nothing is wrong, you should get wildcard ssl in this path if you are using *.example.com"}]},{type:a,value:e},{type:b,tag:n,props:{className:[o]},children:[{type:b,tag:p,props:{className:[q,u]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fetc\u002Fletsencrypt\u002Flive\u002Fexample.com\u002Ffullchain.pem\n\u002Fetc\u002Fletsencrypt\u002Flive\u002Fexample.com\u002Fprivkey.pem\n"}]}]}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"You just have to setup nginx accordingly and it should be done."}]},{type:a,value:e},{type:b,tag:f,props:{},children:[{type:a,value:"I'm sure there are better ways than this but this is my old note.\nIf anyone have better instructions, please let me know so I can share with other as well."}]}]},dir:"\u002Fposts",path:"\u002Fposts\u002Fletsencrypt-ssl",extension:".md",createdAt:T,updatedAt:T}}],fetch:{},mutations:void 0}}("text","element","span","token","\n","p","code","punctuation","function"," ","directive","keyword","a","div","nuxt-content-highlight","pre","line-numbers","\n  ",";","sudo","language-text","nofollow","noopener","noreferrer","_blank","apt-get","https:\u002F\u002Fdnschecker.org\u002F","h1","true",-1,"icon","icon-link","{","\n    ","}","root","https:\u002F\u002Fcertbot.eff.org\u002Fall-instructions","https:\u002F\u002Fcertbot.eff.org\u002Flets-encrypt\u002Fubuntubionic-apache.html"," update\n","install","number","80","location","variable","txt","2023-01-11T12:49:22.000Z")));